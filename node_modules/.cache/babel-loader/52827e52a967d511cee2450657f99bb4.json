{"ast":null,"code":"var _jsxFileName = \"/Users/Mong/Desktop/react-app-daniel/src/containers/Series/index.js\";\nimport React, { Component } from 'react';\nimport SeriesList from '../../components/SeriesList';\nimport 'whatwg-fetch'; // \"Vikings\", \"Lord of The Rings\", \"Game of Thrones\"\n\nclass Series extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSeriesInputChange = e => {\n      // this.setState({ seriesName: e.target.value, isFetching: true });\n      fetch('http://api.tvmaze.com/search/shows?q=${e.target.value}').then(response => response.json()).then(json => this.setState({\n        series: json,\n        isFetching: false\n      })); // This will make the search method (if I write Vikings in the text input)\n      // It will fetch the data from the link\n      // Awesome!!!\n      // console.log(e)\n      // console.log(e.target.value)\n\n      console.log(this.state.seriesName);\n    };\n\n    this.state = {\n      series: [] // seriesName: '',\n      // isFetching: false\n\n    };\n  }\n\n  componentDidMount() {// if I want\n    // fetch('http://api.tvmaze.com/search/shows?q=Vikings')\n    //   .then(response => response.json())\n    //   .then(json => this.setState({ series: json }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          series = _this$state.series,\n          seriesName = _this$state.seriesName,\n          isFetching = _this$state.isFetching;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onSeriesInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), series.length === 0 && seriesName === '' && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Please type the TV series you want to find\"), series.length === 0 && seriesName !== '' && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"The TV series you type in cannot be found\"), React.createElement(SeriesList, {\n      list: this.state.series,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Series;","map":{"version":3,"sources":["/Users/Mong/Desktop/react-app-daniel/src/containers/Series/index.js"],"names":["React","Component","SeriesList","Series","constructor","props","onSeriesInputChange","e","fetch","then","response","json","setState","series","isFetching","console","log","state","seriesName","componentDidMount","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,cAAP,C,CACA;;AACA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC3BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAiBlBC,mBAjBkB,GAiBIC,CAAC,IAAI;AACvB;AACAC,MAAAA,KAAK,CAAC,wDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,IAAV;AAAgBG,QAAAA,UAAU,EAAE;AAA5B,OAAd,CAFhB,EAFuB,CAMvB;AACA;AACA;AAEA;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,UAAvB;AACH,KA9BiB;;AAEd,SAAKD,KAAL,GAAa;AACTJ,MAAAA,MAAM,EAAE,EADC,CAET;AACA;;AAHS,KAAb;AAMH;;AAEDM,EAAAA,iBAAiB,GAAG,CAChB;AACA;AACA;AACA;AACH;;AAiBDC,EAAAA,MAAM,GAAE;AAAA,wBACqC,KAAKH,KAD1C;AAAA,UACGJ,MADH,eACGA,MADH;AAAA,UACWK,UADX,eACWA,UADX;AAAA,UACuBJ,UADvB,eACuBA,UADvB;AAGJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAG,MADX;AAEI,MAAA,QAAQ,EAAI,KAAKR,mBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAYQO,MAAM,CAACQ,MAAP,KAAkB,CAAlB,IAAuBH,UAAU,KAAK,EAAtC,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAbR,EAgBQL,MAAM,CAACQ,MAAP,KAAkB,CAAlB,IAAuBH,UAAU,KAAK,EAAtC,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAjBR,EAmBI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAI,KAAKD,KAAL,CAAWJ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADJ;AAuBH;;AA3D0B;;AA8D/B,eAAeV,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport SeriesList from '../../components/SeriesList';\nimport 'whatwg-fetch';\n// \"Vikings\", \"Lord of The Rings\", \"Game of Thrones\"\nclass Series extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            series: [],\n            // seriesName: '',\n            // isFetching: false\n        };\n        \n    }\n\n    componentDidMount() { \n        // if I want\n        // fetch('http://api.tvmaze.com/search/shows?q=Vikings')\n        //   .then(response => response.json())\n        //   .then(json => this.setState({ series: json }));\n    }\n    \n    onSeriesInputChange = e => {\n        // this.setState({ seriesName: e.target.value, isFetching: true });\n        fetch('http://api.tvmaze.com/search/shows?q=${e.target.value}')\n          .then(response => response.json())\n          .then(json => this.setState({ series: json, isFetching: false }));\n\n        // This will make the search method (if I write Vikings in the text input)\n        // It will fetch the data from the link\n        // Awesome!!!\n\n        // console.log(e)\n        // console.log(e.target.value)\n        console.log(this.state.seriesName)\n    }\n\n    render(){\n        const {series, seriesName, isFetching} = this.state;\n\n        return (\n            <div>\n                {/* The length of series array - {this.state.series.length} */}\n                <div>\n                    <input\n                        type = \"text\" \n                        onChange = {this.onSeriesInputChange}\n                    />\n                </div>\n                {/* These two if statements cannot be executed \n                (means that it is always false)\n                because I have validated the number of the series in the state) */}\n                {\n                    series.length === 0 && seriesName === '' &&\n                    <p>Please type the TV series you want to find</p>\n                }\n                {\n                    series.length === 0 && seriesName !== '' &&\n                    <p>The TV series you type in cannot be found</p>\n                }\n                <SeriesList list = {this.state.series} />\n            </div>\n        )\n    }\n}\n\nexport default Series;"]},"metadata":{},"sourceType":"module"}